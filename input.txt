// Line comment

// Global vars
int globIntVar = 0;
string globStringVarWithInit = "It is global string";
string globalStr;
bool globBoolVar = false;
int glob;
firstClass motherfucker(1488 + 1488, false && true);

struct map {
    int index;
    string value;
}

struct vecmap {
    map x1;
    map x2;
}

struct firstClass {
     int num;
     bool flag;
}

struct secondClass {
    int index;
    firstClass fc;
}

// void function
void doNothing (firstClass p) {
    write(p.num);
    firstClass l = p;
    l.num = 1488;
    write(p.num);
    write(l.num);

}

int recurse (int i) {
    if (i < 20) {
        i = recurse(i + 1);
    }
    return i;
}

struct point {
    int x;
    int y;
}

struct vector {
    point a;
    point b;
}

struct dvector {
    vector v1;
    vector v2;
}

int getSqDistance(vector v) {
    int res = (v.a.x - v.b.x)*(v.a.x - v.b.x) + (v.a.y - v.b.y)*(v.a.y - v.b.y);
    return res;
}


// Union example
firstClass getBean () {
    firstClass t(recurse(6), false);
    bool result = t.flag && (globIntVar == 0);
    if (result)
    {
        write(t.flag);
    }
    else
    {
        write(t.num);
    }
    return t;
}

string strread(){
    string s;
    read(s);
    //write(s);
    return s;
}

int main(){

    firstClass c = getBean();

    secondClass sc(10, getBean());

    secondClass scc(50, sc.fc);

    // + проверка инициализации структур
    // + запись строк по значению в структуры
    // + очистка строк внутри структуры
    // + запрет обращений к полям, если отсутствует инициализация структуры
    // + присваивание глобально объявленных структур
    // - присваивание полей структур полям структур v.a = t.b
    // + запись значений из полей других структур в конструкторе
    // - проверить передачу аргументов в функцию, как поле струтуры (через дополнительную переменную)

    //string s = "hello";
    //string t;
    //t = s;
    //s = t + " lol"; - течёт, через флаг закрыть
    //m.value = s;

    //write(motherfucker.num);
    //write(" ");
    //write(motherfucker.flag);
    //write(" ");

    //motherfucker.num = 1488;
    //motherfucker.flag = false;

    write("hello, " + "goddamn " + "motherfuckers!");

    int a = (2 * 2 + 4 * 4 + 2 * 5) / 5;

    //map mp(666, "first");

    //write(mp.index);
    //write(" ");
    //write(mp.value);
    //write(" ");

    //map c = mp;

    //write(c.index);
    //write(" ");
    //write(c.value);
    //write(" ");

    //mp.value = "second";
    //mp.index = 667;

    //write(mp.index);
    //write(" ");
    //write(mp.value);
    //write(" ");

    //write(c.index);
    //write(" ");
    //write(c.value);
    //write(" ");

    //vecmap vm(c, mp);

    //string s = "hello, dear!";
    //map m(1, "Privet");
    //map nn(2, m.value + " salam ");
    //vecmap vm(m, nn);

    //m.value = m.value + " bitch";
    //nn.value = nn.value + " suka";
    //write("vm.x1.value = ");
    //write(vm.x1.value);

   // write(" 1. vm.x2.value = ");
    //write(vm.x2.value);

    //vm.x2 = m;

    //write(" 2.vm.x2.value = ");
    //write(vm.x2.value);


    //write("1. m.value = ");
    //write(m.value);
    //s = s + " lenta " + s;

    //write(" s = ");
    //write(s);
    //m.value = m.value + s;

    //write("2. m.value = ");
    //write(m.value);

    //m.value = s;

    //write(" 3. m.value = ");
    //write(m.value);

    point x(0, 0);
    point y(3, 4);

    vector v(y, x);

    point z = v.a;

    v.b = z;
    //v.a = v.b;

    write("v.a.x = ");
    write(v.a.x);

    write("v.a.y = ");
    write(v.a.y);

    write("v.b.x = ");
    write(v.b.x);

    write("v.b.y = ");
    write(v.b.y);
    write("     ");


    string l = "hello, ";
    string tl = "hello, ";

    if (l == tl){
        write(" ");
        write(l + tl + "fuckers! ");
    }
    write("im sorry     ");
    return 0;
}

// power example
int power (int k, int n) {
    int r = 1;
    while (k > 0) {
        if (k % 2 == 1) {
            r = r * n;
        }
        n = n * n;
        k = k / 2;
    }
    return r;
}
