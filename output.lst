     1                                  extern printf
     2                                  extern scanf
     3                                  
     4                                  extern strcmp
     5                                  extern strcat
     6                                  extern strcpy
     7                                  
     8                                  
     9                                  struc firstClass
    10 00000000 <res 00000004>          .num RESD 1
    11 00000004 <res 00000004>          .flag RESD 1
    12                                  .size:
    13                                  endstruc
    14                                  
    15                                  
    16                                  
    17                                  section .text
    18                                  global main
    19                                  
    20                                  doNothing:
    21 00000000 55                      push ebp
    22 00000001 89E5                    mov ebp, esp
    23 00000003 83EC00                  sub esp, 0
    24 00000006 6A01                    push 1
    25 00000008 58                      pop eax
    26 00000009 A3[10000000]            mov [l + firstClass.flag], eax
    27 0000000E 6A05                    push 5
    28 00000010 58                      pop eax
    29 00000011 A3[0C000000]            mov [l + firstClass.num], eax
    30 00000016 89EC                    mov esp, ebp
    31 00000018 5D                      pop ebp
    32 00000019 C3                      ret
    33                                  
    34                                  
    35                                  
    36                                  getBean:
    37 0000001A 55                      push ebp
    38 0000001B 89E5                    mov ebp, esp
    39 0000001D 83EC04                  sub esp, 4
    40 00000020 6A00                    push 0
    41 00000022 58                      pop eax
    42 00000023 A3[18000000]            mov [t + firstClass.flag], eax
    43 00000028 6A06                    push 6
    44 0000002A 58                      pop eax
    45 0000002B A3[14000000]            mov [t + firstClass.num], eax
    46 00000030 FF35[18000000]          push dword [t + firstClass.flag]
    47 00000036 FF35[18000000]          push dword [globIntVar]
    48 0000003C 6A00                    push 0
    49 0000003E 5B                      pop ebx
    50 0000003F 5A                      pop edx
    51 00000040 39DA                    cmp edx, ebx
    52 00000042 7707                    ja L7
    53 00000044 B800000000              mov eax, 0
    54 00000049 EB05                    jmp L8
    55                                  L7:
    56 0000004B B801000000              mov eax, 1
    57                                  L8:
    58 00000050 50                      push eax
    59 00000051 5B                      pop ebx
    60 00000052 5A                      pop edx
    61 00000053 83FA01                  cmp edx, 1
    62 00000056 7405                    je L10
    63 00000058 83FB01                  cmp ebx, 1
    64 0000005B 7507                    jne L9
    65                                  L10:
    66 0000005D B801000000              mov eax, 1
    67 00000062 EB05                    jmp L11
    68                                  L9:
    69 00000064 B800000000              mov eax, 0
    70                                  L11:
    71 00000069 50                      push eax
    72 0000006A 58                      pop eax
    73 0000006B 8945FC                  mov [ebp - 4], eax
    74 0000006E FF75FC                  push dword [ebp - 4]
    75 00000071 89EC                    mov esp, ebp
    76 00000073 5D                      pop ebp
    77 00000074 C3                      ret
    78                                  
    79                                  
    80                                  
    81                                  power:
    82 00000075 55                      push ebp
    83 00000076 89E5                    mov ebp, esp
    84 00000078 83EC04                  sub esp, 4
    85 0000007B 6A01                    push 1
    86 0000007D 58                      pop eax
    87 0000007E 8945FC                  mov [ebp - 4], eax
    88 00000081 FF750C                  push dword [ebp + 12]
    89 00000084 FF750C                  push dword [ebp + 12]
    90 00000087 5B                      pop ebx
    91 00000088 58                      pop eax
    92 00000089 F7EB                    imul ebx
    93 0000008B 50                      push eax
    94 0000008C 58                      pop eax
    95 0000008D 89450C                  mov [ebp + 12], eax
    96 00000090 FF7508                  push dword [ebp + 8]
    97 00000093 6A02                    push 2
    98 00000095 5B                      pop ebx
    99 00000096 58                      pop eax
   100 00000097 BA00000000              mov edx, 0
   101 0000009C F7FB                    idiv ebx
   102 0000009E 50                      push eax
   103 0000009F 58                      pop eax
   104 000000A0 894508                  mov [ebp + 8], eax
   105 000000A3 FF750C                  push dword [ebp + 12]
   106 000000A6 FF7508                  push dword [ebp + 8]
   107 000000A9 5B                      pop ebx
   108 000000AA 58                      pop eax
   109 000000AB F7EB                    imul ebx
   110 000000AD 50                      push eax
   111 000000AE 89EC                    mov esp, ebp
   112 000000B0 5D                      pop ebp
   113 000000B1 C20800                  ret 8
   114                                  
   115                                  
   116                                  
   117                                  main:
   118 000000B4 55                      push ebp
   119 000000B5 89E5                    mov ebp, esp
   120 000000B7 83EC08                  sub esp, 8
   121 000000BA 6A05                    push 5
   122 000000BC 58                      pop eax
   123 000000BD 8945FC                  mov [ebp - 4], eax
   124 000000C0 6A06                    push 6
   125 000000C2 58                      pop eax
   126 000000C3 8945F8                  mov [ebp - 8], eax
   127 000000C6 FF75F8                  push dword [ebp - 8]
   128 000000C9 FF75FC                  push dword [ebp - 4]
   129 000000CC E8A4FFFFFF              call power
   130 000000D1 50                      push eax
   131 000000D2 68[00000000]            push int_format
   132 000000D7 E8(00000000)            call printf
   133 000000DC 6A00                    push 0
   134 000000DE 89EC                    mov esp, ebp
   135 000000E0 5D                      pop ebp
   136 000000E1 C3                      ret
   137                                  
   138                                  
   139                                  
   140                                  section .data
   141 00000000 256400000A0000000D-     int_format dd "%d", 0AH,0DH
   142 00000009 000000             
   143 0000000C 257300000A00000000-     str_format dd "%s", 10, 0
   144 00000015 000000             
   145 00000018 00000000                globIntVar: dd 0
   146 0000001C 497420697320676C6F-     globStringVarWithInit: dd "It is global string", 0
   147 00000025 62616C20737472696E-
   148 0000002E 670000000000       
   149 00000034 00000000                globBoolVar: dd 0
   150                                  
   151                                  section .bss
   152 00000000 <res 00000004>          glob: resd 1
   153 00000004 <res 00000008>          motherfucker: resb firstClass.size
   154 0000000C <res 00000008>          l: resb firstClass.size
   155 00000014 <res 00000008>          t: resb firstClass.size
