     1                                  extern printf
     2                                  extern scanf
     3                                  
     4                                  extern strcmp
     5                                  extern strcat
     6                                  extern strcpy
     7                                  
     8                                  
     9                                  extern malloc
    10                                  extern memcpy
    11                                  extern free
    12                                  
    13                                  
    14                                  struc map
    15 00000000 <res 00000004>          .index RESD 1
    16 00000004 <res 00000004>          .value RESD 1
    17                                  .size:
    18                                  endstruc
    19                                  
    20                                  
    21                                  
    22                                  struc vecmap
    23 00000000 <res 00000008>          .x1 RESB map.size
    24 00000008 <res 00000008>          .x2 RESB map.size
    25                                  .size:
    26                                  endstruc
    27                                  
    28                                  
    29                                  
    30                                  section .text
    31                                  global main
    32                                  
    33                                  glob_assign:
    34 00000000 55                      push ebp
    35 00000001 89E5                    mov ebp, esp
    36 00000003 89EC                    mov esp, ebp
    37 00000005 5D                      pop ebp
    38 00000006 C3                      ret
    39                                  
    40                                  
    41                                  main:
    42 00000007 55                      push ebp
    43 00000008 89E5                    mov ebp, esp
    44 0000000A 83EC10                  sub esp, 16
    45 0000000D 60                      pusha
    46 0000000E E8EDFFFFFF              call glob_assign
    47 00000013 61                      popa
    48 00000014 60                      pusha
    49 00000015 6A08                    push 8
    50 00000017 E8(00000000)            call malloc
    51 0000001C 83C404                  add esp, 4
    52 0000001F 8945FC                  mov [ebp - 4], eax
    53 00000022 61                      popa
    54 00000023 68[30000000]            push tmp9
    55 00000028 58                      pop eax
    56 00000029 50                      push eax
    57 0000002A 6800010000              push 256
    58 0000002F E8(00000000)            call malloc
    59 00000034 83C404                  add esp, 4
    60 00000037 89C2                    mov edx, eax
    61 00000039 58                      pop eax
    62 0000003A 50                      push eax
    63 0000003B 52                      push edx
    64 0000003C E8(00000000)            call strcpy
    65 00000041 83C408                  add esp, 8
    66 00000044 8B4DFC                  mov ecx, [ebp - 4]
    67 00000047 895104                  mov [ecx +map.value], edx
    68 0000004A 60                      pusha
    69 0000004B 50                      push eax
    70 0000004C 52                      push edx
    71 0000004D E8(00000000)            call strcpy
    72 00000052 83C408                  add esp, 8
    73 00000055 61                      popa
    74 00000056 689A020000              push 666
    75 0000005B 58                      pop eax
    76 0000005C 8B4DFC                  mov ecx, [ebp - 4]
    77 0000005F 8901                    mov [ecx + map.index], eax
    78 00000061 60                      pusha
    79 00000062 6A08                    push 8
    80 00000064 E8(00000000)            call malloc
    81 00000069 83C404                  add esp, 4
    82 0000006C 8945F8                  mov [ebp - 8], eax
    83 0000006F 61                      popa
    84 00000070 FF75FC                  push dword [ebp - 4]
    85 00000073 58                      pop eax
    86 00000074 8B4DF8                  mov ecx, [ebp - 8]
    87 00000077 8B10                    mov edx, [eax  + map.index]
    88 00000079 8911                    mov [ecx  + map.index], edx
    89 0000007B 50                      push eax
    90 0000007C 6800010000              push 256
    91 00000081 E8(00000000)            call malloc
    92 00000086 83C404                  add esp, 4
    93 00000089 89C3                    mov ebx, eax
    94 0000008B 58                      pop eax
    95 0000008C 8B4DF8                  mov ecx, [ebp - 8]
    96 0000008F 8B5004                  mov edx, [eax  + map.value]
    97 00000092 895904                  mov [ecx  + map.value], ebx
    98 00000095 60                      pusha
    99 00000096 52                      push edx
   100 00000097 53                      push ebx
   101 00000098 E8(00000000)            call strcpy
   102 0000009D 83C408                  add esp, 8
   103 000000A0 61                      popa
   104 000000A1 68[3C000000]            push tmp10
   105 000000A6 68[18000000]            push str
   106 000000AB 6800010000              push 256
   107 000000B0 E8(00000000)            call malloc
   108 000000B5 83C404                  add esp, 4
   109 000000B8 5B                      pop ebx
   110 000000B9 5A                      pop edx
   111 000000BA 52                      push edx
   112 000000BB 50                      push eax
   113 000000BC E8(00000000)            call strcpy
   114 000000C1 83C408                  add esp, 8
   115 000000C4 53                      push ebx
   116 000000C5 50                      push eax
   117 000000C6 E8(00000000)            call strcat
   118 000000CB 83C408                  add esp, 8
   119 000000CE 50                      push eax
   120 000000CF 58                      pop eax
   121 000000D0 8B4DFC                  mov ecx, [ebp - 4]
   122 000000D3 60                      pusha
   123 000000D4 50                      push eax
   124 000000D5 FF7104                  push dword [ecx + map.value]
   125 000000D8 E8(00000000)            call strcpy
   126 000000DD 83C408                  add esp, 8
   127 000000E0 61                      popa
   128 000000E1 8B4DFC                  mov ecx, [ebp - 4]
   129 000000E4 FF31                    push dword [ecx + map.index]
   130 000000E6 689B020000              push 667
   131 000000EB 5B                      pop ebx
   132 000000EC 5A                      pop edx
   133 000000ED 01DA                    add edx, ebx
   134 000000EF 89D0                    mov eax, edx
   135 000000F1 50                      push eax
   136 000000F2 58                      pop eax
   137 000000F3 8B4DFC                  mov ecx, [ebp - 4]
   138 000000F6 8901                    mov [ecx + map.index], eax
   139 000000F8 60                      pusha
   140 000000F9 6A10                    push 16
   141 000000FB E8(00000000)            call malloc
   142 00000100 83C404                  add esp, 4
   143 00000103 8945F4                  mov [ebp - 12], eax
   144 00000106 61                      popa
   145 00000107 FF75FC                  push dword [ebp - 4]
   146 0000010A 58                      pop eax
   147 0000010B 8B4DF4                  mov ecx, [ebp - 12]
   148 0000010E 8B10                    mov edx, [eax  + map.index]
   149 00000110 895108                  mov [ecx + vecmap.x2 + map.index], edx
   150 00000113 50                      push eax
   151 00000114 6800010000              push 256
   152 00000119 E8(00000000)            call malloc
   153 0000011E 83C404                  add esp, 4
   154 00000121 89C3                    mov ebx, eax
   155 00000123 58                      pop eax
   156 00000124 8B4DF4                  mov ecx, [ebp - 12]
   157 00000127 8B5004                  mov edx, [eax  + map.value]
   158 0000012A 89590C                  mov [ecx + vecmap.x2 + map.value], ebx
   159 0000012D 60                      pusha
   160 0000012E 52                      push edx
   161 0000012F 53                      push ebx
   162 00000130 E8(00000000)            call strcpy
   163 00000135 83C408                  add esp, 8
   164 00000138 61                      popa
   165 00000139 FF75F8                  push dword [ebp - 8]
   166 0000013C 58                      pop eax
   167 0000013D 8B4DF4                  mov ecx, [ebp - 12]
   168 00000140 8B10                    mov edx, [eax  + map.index]
   169 00000142 8911                    mov [ecx + vecmap.x1 + map.index], edx
   170 00000144 50                      push eax
   171 00000145 6800010000              push 256
   172 0000014A E8(00000000)            call malloc
   173 0000014F 83C404                  add esp, 4
   174 00000152 89C3                    mov ebx, eax
   175 00000154 58                      pop eax
   176 00000155 8B4DF4                  mov ecx, [ebp - 12]
   177 00000158 8B5004                  mov edx, [eax  + map.value]
   178 0000015B 895904                  mov [ecx + vecmap.x1 + map.value], ebx
   179 0000015E 60                      pusha
   180 0000015F 52                      push edx
   181 00000160 53                      push ebx
   182 00000161 E8(00000000)            call strcpy
   183 00000166 83C408                  add esp, 8
   184 00000169 61                      popa
   185 0000016A 68[60000000]            push tmp73
   186 0000016F 68[0C000000]            push str_format
   187 00000174 E8(00000000)            call printf
   188 00000179 83C408                  add esp, 8
   189 0000017C 8B4DF4                  mov ecx, [ebp - 12]
   190 0000017F FF31                    push dword [ecx + vecmap.x1 + map.index]
   191 00000181 68[00000000]            push int_format
   192 00000186 E8(00000000)            call printf
   193 0000018B 83C408                  add esp, 8
   194 0000018E 68[8C000000]            push tmp89
   195 00000193 68[0C000000]            push str_format
   196 00000198 E8(00000000)            call printf
   197 0000019D 83C408                  add esp, 8
   198 000001A0 8B4DF4                  mov ecx, [ebp - 12]
   199 000001A3 FF7104                  push dword [ecx + vecmap.x1 + map.value]
   200 000001A6 68[0C000000]            push str_format
   201 000001AB E8(00000000)            call printf
   202 000001B0 83C408                  add esp, 8
   203 000001B3 68[A8000000]            push tmp105
   204 000001B8 68[0C000000]            push str_format
   205 000001BD E8(00000000)            call printf
   206 000001C2 83C408                  add esp, 8
   207 000001C5 68[C8000000]            push tmp113
   208 000001CA 68[0C000000]            push str_format
   209 000001CF E8(00000000)            call printf
   210 000001D4 83C408                  add esp, 8
   211 000001D7 8B4DF4                  mov ecx, [ebp - 12]
   212 000001DA FF7108                  push dword [ecx + vecmap.x2 + map.index]
   213 000001DD 68[00000000]            push int_format
   214 000001E2 E8(00000000)            call printf
   215 000001E7 83C408                  add esp, 8
   216 000001EA 68[F4000000]            push tmp129
   217 000001EF 68[0C000000]            push str_format
   218 000001F4 E8(00000000)            call printf
   219 000001F9 83C408                  add esp, 8
   220 000001FC 8B4DF4                  mov ecx, [ebp - 12]
   221 000001FF FF710C                  push dword [ecx + vecmap.x2 + map.value]
   222 00000202 68[0C000000]            push str_format
   223 00000207 E8(00000000)            call printf
   224 0000020C 83C408                  add esp, 8
   225 0000020F 68[10010000]            push tmp145
   226 00000214 68[0C000000]            push str_format
   227 00000219 E8(00000000)            call printf
   228 0000021E 83C408                  add esp, 8
   229 00000221 8B4DFC                  mov ecx, [ebp - 4]
   230 00000224 8B5104                  mov edx, [ecx  + map.value]
   231 00000227 60                      pusha
   232 00000228 52                      push edx
   233 00000229 E8(00000000)            call free
   234 0000022E 83C404                  add esp, 4
   235 00000231 61                      popa
   236 00000232 60                      pusha
   237 00000233 FF75FC                  push dword [ebp - 4]
   238 00000236 E8(00000000)            call free
   239 0000023B 83C404                  add esp, 4
   240 0000023E 61                      popa
   241 0000023F 8B4DF8                  mov ecx, [ebp - 8]
   242 00000242 8B5104                  mov edx, [ecx  + map.value]
   243 00000245 60                      pusha
   244 00000246 52                      push edx
   245 00000247 E8(00000000)            call free
   246 0000024C 83C404                  add esp, 4
   247 0000024F 61                      popa
   248 00000250 60                      pusha
   249 00000251 FF75F8                  push dword [ebp - 8]
   250 00000254 E8(00000000)            call free
   251 00000259 83C404                  add esp, 4
   252 0000025C 61                      popa
   253 0000025D 8B4DF4                  mov ecx, [ebp - 12]
   254 00000260 8B5104                  mov edx, [ecx  + vecmap.x1 + map.value]
   255 00000263 60                      pusha
   256 00000264 52                      push edx
   257 00000265 E8(00000000)            call free
   258 0000026A 83C404                  add esp, 4
   259 0000026D 61                      popa
   260 0000026E 8B4DF4                  mov ecx, [ebp - 12]
   261 00000271 8B510C                  mov edx, [ecx  + vecmap.x2 + map.value]
   262 00000274 60                      pusha
   263 00000275 52                      push edx
   264 00000276 E8(00000000)            call free
   265 0000027B 83C404                  add esp, 4
   266 0000027E 61                      popa
   267 0000027F 60                      pusha
   268 00000280 FF75F4                  push dword [ebp - 12]
   269 00000283 E8(00000000)            call free
   270 00000288 83C404                  add esp, 4
   271 0000028B 61                      popa
   272 0000028C 89EC                    mov esp, ebp
   273 0000028E 5D                      pop ebp
   274 0000028F C3                      ret
   275                                  
   276                                  
   277                                  
   278                                  section .data
   279 00000000 256400000A00000000-     int_format dd "%d", 10, 0
   280 00000009 000000             
   281 0000000C 257300000A00000000-     str_format dd "%s", 10, 0
   282 00000015 000000             
   283 00000018 206368616E63650000-     str: dd " chance", 0
   284 00000021 000000             
   285 00000024 666972737400000000-     tmp1: dd "first", 0
   286 0000002D 000000             
   287 00000030 666972737400000000-     tmp9: dd "first", 0
   288 00000039 000000             
   289 0000003C 7365636F6E64000000-     tmp10: dd "second", 0
   290 00000045 000000             
   291 00000048 312E20766D2E78312E-     tmp11: dd "1. vm.x1.index = ", 0
   292 00000051 696E646578203D2000-
   293 00000049 000000000000       
   294 00000060 312E20766D2E78312E-     tmp73: dd "1. vm.x1.index = ", 0
   295 00000069 696E646578203D2000-
   296 00000061 000000000000       
   297 00000078 20766D2E78312E7661-     tmp74: dd " vm.x1.value = ", 0
   298 00000081 6C7565203D20000000-
   299 0000008A 0000               
   300 0000008C 20766D2E78312E7661-     tmp89: dd " vm.x1.value = ", 0
   301 00000095 6C7565203D20000000-
   302 0000009E 0000               
   303 000000A0 2000000000000000        tmp90: dd " ", 0
   304 000000A8 2000000000000000        tmp105: dd " ", 0
   305 000000B0 322E20766D2E78322E-     tmp106: dd "2. vm.x2.index = ", 0
   306 000000B9 696E646578203D2000-
   307 000000B1 000000000000       
   308 000000C8 322E20766D2E78322E-     tmp113: dd "2. vm.x2.index = ", 0
   309 000000D1 696E646578203D2000-
   310 000000C9 000000000000       
   311 000000E0 20766D2E78322E7661-     tmp114: dd " vm.x2.value = ", 0
   312 000000E9 6C7565203D20000000-
   313 000000F2 0000               
   314 000000F4 20766D2E78322E7661-     tmp129: dd " vm.x2.value = ", 0
   315 000000FD 6C7565203D20000000-
   316 00000106 0000               
   317 00000108 2000000000000000        tmp130: dd " ", 0
   318 00000110 2000000000000000        tmp145: dd " ", 0
   319                                  
   320                                  section .bss
